// build.gradle

buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

jar {
    // plain jar 생성을 비활성화하여 Spring Boot 실행 jar만 생성되도록 설정
    enabled = false

    manifest {
        attributes(
                'Main-Class': 'com.campers.MainApplication' // 실제 메인 클래스 경로로 수정
        )
    }
}

group = 'com.campers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // 기존에 로깅 제외 설정이 있다면 제거합니다.
    /*
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    */
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter Dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok for annotations
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MariaDB Driver
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Spring Boot Starter for testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // P6Spy for Query Parameters Logging
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    // Email Sending Library
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Jackson XML 데이터 포맷 (버전 생략, Spring Boot 의존성 관리 사용)
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

    // 스프링 시큐리티와 JWT 의존성 (회원가입 및 인증을 위해 필요)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // **Google OAuth 관련 의존성 추가**
    implementation 'com.google.api-client:google-api-client:1.33.2'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.33.1'
    implementation 'com.google.http-client:google-http-client-jackson2:1.40.1'
}

// Jackson 의존성 버전 강제 설정 (선택 사항)
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.fasterxml.jackson.core' ||
                details.requested.group == 'com.fasterxml.jackson.dataformat') {
            details.useVersion '2.13.5'
        }
    }
}

// Deprecated된 JavaPluginConvention 대신 JavaPluginExtension 사용
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// 테스트 설정: 모든 테스트를 제외하고 싶을 때 설정
tasks.named('test') {
    exclude('**/*')
}

// QueryDSL 관련 설정 (사용 필요 시 주석 해제)
/*
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
*/
